name: Deploy on merge to appstore testing

on:
  push:
    branches:
      - appstore-deploy-testing

jobs:
    build_and_deploy_testflight_ios_app:
        name: Build and Deploy Testflight IOS App
        runs-on: macos-latest
        env:
            FLUTTER_VERSION: 3.24.3
            IPA_PATH: flutter/build/app/outputs/bundle/release/app-release.aab  # This is a placeholder, the actual path will be different
            FIREBASE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_APPLICATION_CREDENTIALS }}
            GOOGLE_APPLICATION_CREDENTIALS: gcp_key.json
        
        steps:
            -   name: Checkout Repo
                uses: actions/checkout@main
                
            -   name: Set up gcp key
                run: |
                    echo "$FIREBASE_APPLICATION_CREDENTIALS" > gcp_key.json

            #Setup flutter
            -   name: Set up Flutter
                uses: subosito/flutter-action@main
                with:
                    flutter-version: ${{ env.FLUTTER_VERSION }}
                    channel: 'stable'
            

            -   name: Cache CocoaPods
                uses: actions/cache@v3
                with:
                    path: ios/Pods
                    key: ${{ runner.os }}-pods-${{ hashFiles('ios/Podfile.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-pods-
            
            -   name: Install CocoaPods dependencies
                run: |
                    cd flutter/ios
                    pod install
                    cd ..
            
            
            -   name: Install flutter dependencies
                run: |
                    cd flutter 
                    flutter pub get
            
            -   name: Install the Apple certificate and provisioning profile
                env:
                    APPLE_DISTRIBUTION_CERTIFICATE_BASE64: ${{ secrets.APPLE_DISTRIBUTION_CERTIFICATE_BASE64 }}
                    APPLE_P12_PASSWORD: ${{ secrets.APPLE_P12_PASSWORD }}
                    APPLE_PROVISIONING_PROFILE_MOBILEPROVISION: ${{ secrets.APPLE_PROVISIONING_PROFILE_MOBILEPROVISION }} #in base64, i labelled it dumb
                    KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
                run: |
                    # create variables
                    CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
                    PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
                    KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

                    # import certificate and provisioning profile from secrets
                    echo -n "$APPLE_DISTRIBUTION_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
                    echo -n "$APPLE_PROVISIONING_PROFILE_MOBILEPROVISION" | base64 --decode -o $PP_PATH

                    # create temporary keychain
                    security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
                    security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
                    security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

                    # import certificate to keychain
                    security import $CERTIFICATE_PATH -P "$APPLE_P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
                    security set-key-partition-list -S apple-tool:,apple: -k "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
                    security list-keychain -d user -s $KEYCHAIN_PATH

                    # apply provisioning profile
                    mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
                    cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles
                
                
            #build and release 
            -   name: Build IOS App
                run: |
                    cd flutter
                    xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -sdk iphoneos -configuration Release archive -archivePath ../build/ios/archive/Runner.xcarchive
                    xcodebuild -exportArchive -archivePath build/ios/archive/Runner.xcarchive -exportOptionsPlist ios/exportOptions.plist -exportPath ipa

            -   name: verify the build
                run: |
                    cd flutter
                    echo "Build successful"