name: Deploy on Merge to Main

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

jobs:
  build_and_deploy_backend_and_web:
    name: Build and Deploy Backend and Web
    runs-on: macos-latest
    env: 
        FIREBASE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_APPLICATION_CREDENTIALS }}
        GOOGLE_APPLICATION_CREDENTIALS: ./gcp_key.json
        FLUTTER_VERSION: 3.24.3
    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
      
        #Set up gcp keys
      - name: Set up gcp keys
        run: |
          echo "$FIREBASE_APPLICATION_CREDENTIALS" > gcp_key.json
          echo "$FIREBASE_APPLICATION_CREDENTIALS" > functions/gcp_key.json
      
        #setup python
      - name: Set up python
        uses: actions/setup-python@main
        with:
          python-version: '3.12' 
      
      #setup firebase cli
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      #Setup flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@main
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      
      - name: Install flutter dependencies
        run: |
          cd flutter 
          flutter pub get
      
      #deploy backend and web
      - name: Deploy Web Hosting, Functions, and Firestore Rules
        run: |
          python -m venv ./functions/venv 
          source ./functions/venv/bin/activate
          pip install -r ./functions/requirements.txt
          deactivate
          firebase experiments:enable webframeworks
          firebase deploy --only hosting,functions,firestore:rules


  build_and_deploy_android_app:
    name: Build and Deploy Android App
    runs-on: macos-latest
    env:
        JAVA_VERSION: 17
        FLUTTER_VERSION: 3.24.3
        AAB_PATH: flutter/build/app/outputs/bundle/release/app-release.aab
        FIREBASE_APPLICATION_CREDENTIALS: ${{ secrets.FIREBASE_APPLICATION_CREDENTIALS }}
        GOOGLE_APPLICATION_CREDENTIALS: gcp_key.json
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@main
        
      - name: Set up gcp key
        run: |
          echo "$FIREBASE_APPLICATION_CREDENTIALS" > gcp_key.json

      #Setup flutter
      - name: Set up Flutter
        uses: subosito/flutter-action@main
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      
      - name: Install flutter dependencies
        run: |
          cd flutter 
          flutter pub get
        
        
      #setup java for android build
      - name: Set Up Java
        uses: actions/setup-java@main
        with:
          distribution: 'oracle'
          java-version: ${{ env.JAVA_VERSION }}

      #Setup Keystore for signing
      - name: Decode Keystore
        run: |
          cd flutter
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/keystore.jks
          
      - name: Create key.properties
        run: |
          cd flutter
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties
    
      #build and release 
      - name: Build Android App
        run: |
            cd flutter
            flutter build appbundle --build-number ${{ github.run_number }}

      - name: Release app to internal track
        uses: r0adkll/upload-google-play@master
        with:
          serviceAccountJsonPlainText: ${{ env.FIREBASE_APPLICATION_CREDENTIALS }}
          packageName: com.webbpulse.inventory.android
          releaseFiles: flutter/build/app/outputs/bundle/release/app-release.aab
          releaseName: cicd testing
          track: internal
          status: draft   
